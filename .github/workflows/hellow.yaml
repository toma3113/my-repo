# name: Contexts
# on: push
# jobs:   
#     print:
#         runs-on: ubuntu-latest
#         steps: 
#             - run: echo "${{ github.actor }}"

## コード3.2
# name: Environment variables
# on: push
# jobs:
#     run:
#         runs-on: ubuntu-latest
#         env:
#             BRANCH: main
#         steps:
#             - run: echo "${BRANCH}"
#             - uses: actions/checkout@v4
#               with:
#                 ref: ${{ env.BRANCH }}

## コード3.3
# name: Override environment variables
# on: push
# env:
#     EXAMPLE: Defined by workflow level
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "${EXAMPLE}"
#             - env:
#                 EXAMPLE: Defined bt step level
#               run: echo "${EXAMPLE}"

##　コード3.4
# name: Itermediate environment variables
# on: push
# jobs: 
#     print:
#         runs-on: ubuntu-latest
#         env:
#             ACTOR: ${{ github.actor }}
#         steps:
#             - run: echo "${ACTOR}"]

## コード3.5
# name: Variables
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         env:
#             USERNAME: ${{ vars.USERNAME }}
#         steps:
#             - run: echo "${USERNAME}"

## コード3.6
# name: Secrets
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         env:
#             PASSWORD: ${{secrets.PASSWORD}}
#         steps:
#             - run: echo "${PASSWORD}"
#             - run: echo "${PASSWORD:0:1} ${PASSWORD#?}"

# ## コード 3.7
# name: Literals
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         steps: 
#             - run: printenv | grep 'LITERAL_'
#               env:
#                 LITERAL_NULL: ${{ null }}
#                 LITERAL_BOOLEAN: ${{ true }}
#                 LITERAL_NUMBER: ${{ 12345 }}
#                 LITERAL_STRING: ${{ 'Hello' }}
#                 LITERAL_OMIT_STRING: World

## コード 3.8
name: Compare function
on: push
jobs:
    compare:
        runs-on: ubuntu-latest
        steps: 
            - run: printenv | grep '_FUNC'
              env:
                CONTAINS_FUNC: ${{ contains('Hello', 'ell') }}
                STARTS_WITH_FUNC: ${{ startsWith('Hello', 'He')}}
                ENDS_WITH_FUNC: ${{ endsWith('Hello', 'lo')}}