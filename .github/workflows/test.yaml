# name: Static analysis
# on: 
#   pull_request:
#     paths: ['.github/workflows/*.yml', '.github/workflows/*.yaml']
# defaults:
#   run:
#     shell: bash
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true
# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     timeout-minutes: 5
#     steps:
#       - uses: actions/checkout@v4
#       - run: |
#           docker run --rm -v "${pwd}:${pwd}" -w "$(pwd)" rhysd/actionlint:latest

##コード4.9
# name: Auto_cancel
# on: pull_request
# concurrency: 
#    group: ${{ github.workflow }}-${{ github.ref }}
#    cancel-in-progress: true
# jobs:
#   sleep:
#     runs-on: ubuntu-latest
#     steps:
#       - run: sleep 120

##コード5.1
# name: Debug log
# on: push
# jobs:
#   sleep:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "::debug::This is degug log"

##コード5.2
# name: Bash tracing
# on: push
# jobs:
#   log:
#     runs-on: ubuntu-latest
#     steps:
#       - run: |
#          set -x
#          date
#          hostname

##コード5.3
# name: Log group
# on: push
# jobs:
#   log:
#     runs-on: ubuntu-latest
#     steps: 
#       - run: |
#           echo "::group:Show environment variables"
#           printenv
#           echo "::endgroup::"

##コード5.4
# name: Add mask
# on: push
# jobs:
#   log:
#     runs-on: ubuntu-latest
#     env:
#       PASSWORD: SuperSeretValue
#     steps: 
#       - run: echo "::add-mask::&{PASSWORD}"
#       - run: echo "${PASSWORD}" 

##コード5.5
# name: Add mask
# on: push
# jobs:
#   log:
#     runs-on: ubuntu-latest
#     env:
#       PASSWORD: SuperSeretValue
#     steps: 
#       - run: echo "::add-mask::&{PASSWORD}"
#       - run: echo "${PASSWORD}" 


##コード5.5
# name: Annotation
# on: push
# jobs:
#   log:
#     runs-on: ubuntu-latest
#     steps: 
#       - run: echo "::error::This is an error"
#       - run: echo "::warning::This is a warning"
#       - run: echo "::notice::This is a notice" 

      
##コード5.5
# name: Job sommaries
# on: push
# jobs:
#   log:
#     runs-on: ubuntu-latest
#     steps: 
#       - run: |
#           echo "## Example Title :rocket" >> "${GITHUB_STEP_SUMMARY}"
#           echo "- first line" >> "${GITHUB_STEP_SUMMARY}"
#           echo "- second line" >> "${GITHUB_STEP_SUMMARY}"

# ##コード5.7
# name: Parallel jobs
# on: push
# jobs:
#   first:
#     runs-on: ubuntu-latest
#     steps:
#       - run: sleep 10 && echo "first job"
#   second:
#     runs-on: ubuntu-latest
#     steps:
#       - run: sleep 10 && echo "second job"
#   third:
#     runs-on: ubuntu-latest
#     steps:
#       - run: sleep 10 && echo "third job"

##コード5.8
# name: Sequential jobs
# on: push
# jobs:
#   first:
#     runs-on: ubuntu-latest
#     steps:
#       - run: sleep 10 && echo "first job"
#   second:
#     runs-on: ubuntu-latest
#     needs: [first]
#     steps:
#       - run: sleep 10 && echo "second job"
#   third:
#     runs-on: ubuntu-latest
#     needs: [second]
#     steps:
#       - run: sleep 10 && echo "third job"


# ##コード5.9
# name: Share job data
# on: push
# jobs:
#   before:
#     runs-on: ubuntu-latest
#     steps:
#       - id: generate
#         run: echo "result=Hello" >> "${GITHUB_OUTPUT}"
#     outputs:
#       result: ${{ steps.generate.outputs.result }}
#   after:
#     runs-on: ubuntu-latest
#     needs: [before]
#     steps:
#       - env:
#           RESULT: ${{ needs.before.outputs.result }}
#         run: echo "${RESULT}"

##コード5.10
name: Matrix
on: push
jobs:
  print:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - run: echo"${RUNNER_OS}"
          shell: bash